#!/bin/sh
# File: bandwidth.sh
# Description: The bandwidth shaper wrapper script for RahuNAS

PATH=/sbin:/bin:/usr/sbin:/usr/bin:@prefix@/sbin:@prefix@/bin
prefix=@prefix@
exec_prefix=@exec_prefix@

TC=/sbin/tc
IP=/sbin/ip

INIT=@sysconfdir@/default/rahunas
RUN=@localstatedir@/run/rahunas-bandwidth

# Interface Speed (Kbit), Default: 100 Mbps
INTERFACE_SPEED=102400

SHAPING_DOWN_INF=imq0
SHAPING_UP_INF=imq1

INTERFACE_ID=9999
BITTORRENT_ID=9998

MESSAGE=""

test -f $INIT || exit 0
. $INIT

test "$RUN_DAEMON" = "yes" || exit 0
test -f $RAHUNAS_CONFIG || exit 1

set -e

get_config_value () {
  section=$1
  key=$2
  file=$3

  cat $file | sed -e "0,/$section = {/ ! { /}/,/$section = {/ ! s/^/>>/ }" | grep "^>>" | sed -e "s/^>>//g" | grep -w "$key" | cut -d= -f2 | sed "s/^ *\(.*[^ ]\) *$/\1/" | sed 's/"//g'
}

BANDWIDTH_SHAPE=`get_config_value main bandwidth_shape $RAHUNAS_CONFIG`
BITTORRENT_DOWNLOAD_MAX=`get_config_value main bittorrent_download_max $RAHUNAS_CONFIG`
BITTORRENT_UPLOAD_MAX=`get_config_value main bittorrent_upload_max $RAHUNAS_CONFIG` 

test "$BANDWIDTH_SHAPE" = "yes" || exit 0 

interface_setting () {
  case "$1" in
    start)
      # Interface Downlink
      $TC qdisc add dev $SHAPING_DOWN_INF root handle 1: htb \
        default ${INTERFACE_ID} 
      $TC class add dev $SHAPING_DOWN_INF parent 1: classid 1:${INTERFACE_ID} \
        htb rate ${INTERFACE_SPEED}Kbit

      # Interface Uplink
      $TC qdisc add dev $SHAPING_UP_INF root handle 2: htb \
        default ${INTERFACE_ID} 
      $TC class add dev $SHAPING_UP_INF parent 2: classid 2:${INTERFACE_ID} \
        htb rate ${INTERFACE_SPEED}Kbit
      ;;
  stop)
      # Interface Downlink
      $TC qdisc del dev $SHAPING_DOWN_INF root

      # Interface Uplink
      $TC qdisc del dev $SHAPING_UP_INF root
      ;;
  esac
}

bittorrent_setting () {
  case "$1" in
    start)
      # BITTORRENT Download throttling
      $TC class add dev $SHAPING_DOWN_INF parent 1:${INTERFACE_ID} \
        classid 1:${BITTORRENT_ID} htb rate ${BITTORRENT_DOWNLOAD_MAX}Kbit
      $TC qdisc add dev $SHAPING_DOWN_INF parent 1:${BITTORRENT_ID} \
        handle ${BITTORRENT_ID}: sfq perturb 10
      $TC filter add dev $SHAPING_DOWN_INF parent 1: protocol ip prio 1 \
        handle 0x3 fw classid 1:${BITTORRENT_ID}

      # BITTORRENT Upload throttling
      $TC class add dev $SHAPING_UP_INF parent 2:${INTERFACE_ID} \
        classid 2:${BITTORRENT_ID} htb rate ${BITTORRENT_UPLOAD_MAX}Kbit
      $TC qdisc add dev $SHAPING_UP_INF parent 2:${BITTORRENT_ID} \
        handle ${BITTORRENT_ID}: sfq perturb 10
      $TC filter add dev $SHAPING_UP_INF parent 2: protocol ip prio 1 \
        handle 0x3 fw classid 2:${BITTORRENT_ID}
      ;;
    stop)
      ;;
  esac
}

start () {
  if [ ! -e $RUN ]; then
    interface_setting start
    bittorrent_setting start
    MESSAGE="Start OK"
    touch $RUN
  fi
}

stop () {
  if [ -e $RUN ]; then
    interface_setting stop
    bittorrent_setting stop
    MESSAGE="Stop OK"
    rm -f $RUN
  fi
}

usage_add() {
  echo "Usage: $1 add ID IP DOWNSPEED UPSPEED"
  echo "         ID - ID number from 1 to 9900"
  echo "         IP - IPv4 Address"
  echo "  DOWNSPEED - Download speed (bits/s)"
  echo "    UPSPEED - Upload speed (bits/s)"
}

usage_del() {
  echo "Usage: $1 del ID"
  echo "         ID - ID number from 1 to 9900"
}

usage() {
  echo "Usage: $1 {start|stop|restart|add|del}"
  echo "       $1 add --help"
  echo "       $1 del --help"
}

bw_add() {
  ID=$1
  IP=$2
  DOWNSPEED=$3
  UPSPEED=$4
  MESSAGE="Add shaping slot id: $ID for $IP with D/U=$DOWNSPEED/$UPSPEED bits/s"

  # Downlink
  $TC class add dev $SHAPING_DOWN_INF parent 1:${INTERFACE_ID} \
    classid 1:${ID} htb rate ${DOWNSPEED}bit ceil ${DOWNSPEED}bit
  $TC filter add dev $SHAPING_DOWN_INF parent 1: \
    protocol ip prio 2 u32 match ip dst ${IP}/32 flowid 1:${ID}

  # Uplink
  $TC class add dev $SHAPING_UP_INF parent 2:${INTERFACE_ID} \
    classid 2:${ID} htb rate ${UPSPEED}bit ceil ${UPSPEED}bit
  $TC filter add dev $SHAPING_UP_INF parent 2: \
    protocol ip prio 2 u32 match ip src ${IP}/32 flowid 2:${ID}
}

bw_del() {
  ID=$1
  MESSAGE="Delete shaping slot id: $ID"

  # Filter Removal
  # Downlink/Uplink
  DOWN_HANDLE=`$TC filter show dev $SHAPING_DOWN_INF | grep -w "flowid 1:${ID} " | awk '{print $10}'`
  UP_HANDLE=`$TC filter show dev $SHAPING_UP_INF | grep -w "flowid 2:${ID} " | awk '{print $10}'`
  $TC filter del dev $SHAPING_DOWN_INF parent 1: \
    prio 2 handle ${DOWN_HANDLE} u32
  $TC filter del dev $SHAPING_UP_INF parent 2: \
    prio 2 handle ${UP_HANDLE} u32

  # Class Removal
  # Downlink/Uplink
  $TC class del dev $SHAPING_DOWN_INF parent 1:${INTERFACE_ID} classid 1:${ID}
  $TC class del dev $SHAPING_UP_INF parent 2:${INTERFACE_ID} classid 2:${ID}
}

N=@sysconfdir@/rahunas/bandwidth.sh

case "$1" in
  start)
    start || true 
    test -n "$MESSAGE" || MESSAGE="NOT COMPLETED"
    echo $MESSAGE
    ;;
  stop)
    stop || true
    test -n "$MESSAGE" || MESSAGE="NOT COMPLETED"
    echo $MESSAGE

    ;;
  restart)
    stop || true
    test -n "$MESSAGE" || MESSAGE="NOT COMPLETED"
    echo $MESSAGE

    start || true
    test -n "$MESSAGE" || MESSAGE="NOT COMPLETED"
    echo $MESSAGE

    ;;
  add)
    if [ "$2" = "--help" ]; then
      usage_add $N
      exit 3
    fi

    if [ $# != 5 ]; then
      echo "Error: too few arguments"
      usage_add $N
      exit 1
    fi

    bw_add $2 $3 $4 $5 || true
    echo $MESSAGE
    ;;
  del)
    if [ "$2" = "--help" ]; then
      usage_del $N
      exit 3
    fi

    if [ $# != 2 ]; then
      echo "Error: too few arguments"
      usage_del $N
      exit 1
    fi

    bw_del $2 || true
    echo $MESSAGE
    ;;
  *)
    usage $N
    exit 3
    ;;
esac 

exit 0
